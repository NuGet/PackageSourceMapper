resources:
- repo: self
  clean: true

# The variables `_DotNetArtifactsCategory` and `_DotNetValidationArtifactsCategory` are required for proper publishing of build artifacts. See https://github.com/dotnet/roslyn/pull/38259
variables:
  - name: _DotNetArtifactsCategory
    value: .NETCore
  - name: _DotNetValidationArtifactsCategory
    value: .NETCoreValidation

# Branches that trigger a build on commit
trigger:
- dev

parameters:
- name: SignType
  default: test
  type: string
  values:
  - real
  - test

stages:
- stage: publish
  displayName: Publishing
  timeoutInMinutes: 120
  variables:
    - group: DotNet-Symbol-Server-Pats

  pool:
    name: NetCore1ESPool-Internal
    demands: 
      - ImageOverride -equals 1es-windows-2022
      - cmd

  jobs:
  - job: OfficialBuild
    displayName: Official Build

    steps:
    - task: ms-vseng.MicroBuildTasks.30666190-6959-11e5-9f96-f56098202fef.MicroBuildSigningPlugin@1
      displayName: Install Signing Plugin
      inputs:
        signType: $(SignType)
        esrpSigning: true
      condition: and(succeeded(), ne(variables['SignType'], ''))

    - script: eng\common\CIBuild.cmd
                -configuration $(BuildConfiguration)
                /p:OfficialBuildId=$(Build.BuildNumber)
                /p:VisualStudioDropName=$(VisualStudioDropName)
                /p:DotNetSignType=$(SignType)
                /p:DotNetSymbolServerTokenMsdl=$(microsoft-symbol-server-pat)
                /p:DotNetSymbolServerTokenSymWeb=$(symweb-symbol-server-pat)
                /p:DotNetFinalVersionKind=$(_additionalBuildArgs)
                /p:DotNetArtifactsCategory=$(_DotNetArtifactsCategory)
                /p:DotnetPublishUsingPipelines=true
      displayName: Build

    - template: eng\common\templates\steps\generate-sbom.yml

    - task: PublishBuildArtifacts@1
      displayName: Publish Logs
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\artifacts\log\$(BuildConfiguration)'
        ArtifactName: 'Logs'
        publishLocation: Container
      continueOnError: true
      condition: not(succeeded())

    - task: PublishBuildArtifacts@1
      displayName: Publish Logs
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\artifacts\TestResults\$(BuildConfiguration)'
        ArtifactName: 'TestResults'
        publishLocation: Container
      condition: not(succeeded())

    # Publish our NuPkgs as an artifact. The name of this artifact must be PackageArtifacts as the
    # arcade templates depend on the name.'
    - task: PublishBuildArtifacts@1
      displayName: Publish Packages
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\artifacts\packages\$(BuildConfiguration)'
        ArtifactName: 'PackageArtifacts'
      condition: succeeded()

    - task: ms-vseng.MicroBuildTasks.521a94ea-9e68-468a-8167-6dcf361ea776.MicroBuildCleanup@1
      displayName: Cleanup
      condition: always()

    - task: PublishBuildArtifacts@1
      displayName: Publish MicroBuild Artifacts
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)\MicroBuild\Output'
        ArtifactName: MicroBuildOutputs
        publishLocation: Container
      condition: succeededOrFailed()
